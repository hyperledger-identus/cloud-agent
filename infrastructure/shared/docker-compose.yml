version: '3.8'

services:

  ##########################
  # Castor Database
  ##########################
  db_castor:
    image: postgres:13
    restart: always
    environment:
      POSTGRES_DB: castor
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - pg_data_castor_db:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres", "-d", "castor" ]
      interval: 10s
      timeout: 5s
      retries: 5

  ##########################
  # Pollux Database
  ##########################

  db_pollux:
    image: postgres:13
    restart: always
    environment:
      POSTGRES_DB: pollux
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - pg_data_pollux_db:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres", "-d", "pollux" ]
      interval: 10s
      timeout: 5s
      retries: 5

  ##########################
  # Connect Database
  ##########################

  db_connect:
    image: postgres:13
    restart: always
    environment:
      POSTGRES_DB: connect
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - pg_data_connect_db:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres", "-d", "connect" ]
      interval: 10s
      timeout: 5s
      retries: 5

  ##########################
  # Iris Database
  ##########################

  db_iris:
    image: postgres:13
    restart: always
    environment:
      POSTGRES_DB: iris
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - pg_data_iris_db:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres", "-d", "iris" ]
      interval: 10s
      timeout: 5s
      retries: 5

  ##########################
  # Services
  ##########################
  mediator:
    image: ghcr.io/input-output-hk/mercury-mediator:${MERCURY_MEDIATOR_VERSION}

  iris:
    image: ghcr.io/input-output-hk/iris-service:${IRIS_SERVICE_VERSION}
    environment:
      IRIS_DB_HOST: db_iris
      IRIS_DB_PORT: 5432
      IRIS_DB_NAME: iris
      IRIS_DB_USER: postgres

  prism-agent:
    image: ghcr.io/input-output-hk/prism-agent:${PRISM_AGENT_VERSION}
    environment:
      IRIS_HOST: iris
      IRIS_PORT: 8081
      CASTOR_DB_HOST: db_castor
      CASTOR_DB_PORT: 5432
      CASTOR_DB_NAME: castor
      CASTOR_DB_USER: postgres
      CASTOR_DB_PASSWORD: postgres
      POLLUX_DB_HOST: db_pollux
      POLLUX_DB_PORT: 5432
      POLLUX_DB_NAME: pollux
      POLLUX_DB_USER: postgres
      POLLUX_DB_PASSWORD: postgres
      CONNECT_DB_HOST: db_connect
      CONNECT_DB_PORT: 5432
      CONNECT_DB_NAME: connect
      CONNECT_DB_USER: postgres
      CONNECT_DB_PASSWORD: postgres
      DIDCOMM_SERVICE_URL: http://host.docker.internal:${PORT}/didcomm/
    depends_on:
      - db_castor
      - db_pollux
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://prism-agent:8080/connections" ]
      interval: 30s
      timeout: 10s
      retries: 5
    extra_hosts:
      - "host.docker.internal:host-gateway"

  swagger-ui:
    image: swaggerapi/swagger-ui:v4.14.0
    environment:
      - 'URLS=[
          { name: "Prism Agent", url: "/prism-agent/api/openapi-spec.yaml" },
          { name: "Mediator", url: "/mediator/api/openapi-spec.yaml" }
        ]'

  apisix:
    image: apache/apisix:2.15.0-alpine
    restart: always
    volumes:
      - ./apisix/conf/apisix.yaml:/usr/local/apisix/conf/apisix.yaml:ro
      - ./apisix/conf/config.yaml:/usr/local/apisix/conf/config.yaml:ro
    ports:
      - "${PORT}:9080/tcp"
    depends_on:
      - mediator
      - prism-agent
      - swagger-ui

volumes:
  pg_data_castor_db:
  pg_data_pollux_db:
  pg_data_connect_db:
  pg_data_iris_db:
  pgadmin:
