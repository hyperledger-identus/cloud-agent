openapi: 3.0.0
info:
  title: Mediator API
  description: Mediator Api.
  version: 0.1.0
servers:
  - url: http://atala-prism.io/v1
    description: Mediator API
  - url: http://localhost:8080
    description:  for local testing
paths:
  /outofband/create-invitation:
    post:
      tags:
        - outofband
      summary: Create a new DIDCommV2 out of band invitation
      operationId: DIDCommV2CreateInvitation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    goal-code:
                      $ref: "#/components/schemas/GoalCode"
      responses:
        200:
          description: Invitation created
          content:
            application/json:
              schema:
                required:
                  - invitation
                properties:
                  invitation:
                    $ref: "#/components/schemas/DIDCommV2Invitation"
  /outofband/accept-invitation:
    post:
      tags:
        - outofband
      summary: Accept a DIDCommV2 out of band invitation
      operationId: DIDCommV2AcceptInvitation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - data
              properties:
                data:
                  type: object
                  properties:
                    invitation:
                      $ref: "#/components/schemas/DIDCommV2Invitation"
      responses:
        200:
          description: Invitation accepted
          content:
            application/json:
              schema:
                required:
                  - connection_id
                properties:
                  connection_id:
                    $ref: "#/components/schemas/ConnectionId"
  /mediator/register:
    post:
      tags:
        - mediator
      summary: Register the agent with the router mediate request.
      operationId: MediateRequest
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - id
              properties:
                id:
                  $ref: "#/components/schemas/ConnectionId"
      responses:
        200:
          description: Messages retrieved
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
        default:
          description: other_status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericErrorBody"

  /mediator/messages:
    post:
      tags:
        - mediator
      summary: Messages  pending messages for given connection
      operationId: MessageRequest
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - id
              properties:
                id:
                  $ref: "#/components/schemas/ConnectionId"
      responses:
        200:
          description: Messages retrieved
          content:
            application/json:
              schema:
                $ref:  "#/components/schemas/MessageResponse"
        default:
          description: other_status
          content:
            application/json:
              schema:
                $ref:  "#/components/schemas/GenericErrorBody"

  /mediator/send/message:
    post:
      tags:
        - mediator
      summary:  send message for given connection.
      operationId: SendMessage
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - id
              properties:
                id:
                  $ref: "#/components/schemas/ConnectionId"
      responses:
        200:
          description: Send Message Response
          content:
            application/json:
              schema:
                $ref:  "#/components/schemas/SendMessageResponse"
        default:
          description: other_status
          content:
            application/json:
              schema:
                $ref:  "#/components/schemas/GenericErrorBody"

  /mediator/unregister:
    delete:
      tags:
        - mediator
      summary: Unregisters the agent with the router.
      operationId: UnregisterMediator
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - id
              properties:
                id:
                  $ref: "#/components/schemas/ConnectionId"
      responses:
        200:
          description: Unregister the mediator for this Connection
          content:
            application/json:
              schema:
                $ref:  "#/components/schemas/DeleteMessageResponse"
        default:
          description: other_status
          content:
            application/json:
              schema:
                $ref:  "#/components/schemas/GenericErrorBody"

  /mediator/connections:
    get:
      tags:
        - mediator-admin
      summary:  Retrieves the router`s connections.
      operationId: GetMediatorConnections
      responses:
        200:
          description: Messages retrieved
          content:
            application/json:
              schema:
                $ref:  "#/components/schemas/GetConnectionResponse"
        default:
          description: other_status
          content:
            application/json:
              schema:
                $ref:  "#/components/schemas/GenericErrorBody"

components:
  schemas:
    DIDCommV2Invitation:
      title: DIDCommV2 Out of Band Invitation
      type: object
      example:
        {
          "id": "f3375429-b116-4224-b55f-563d7ef461f1",
          "type": "https://didcomm.org/out-of-band/2.0/invitation",
          "from": "did:prism:testnet:EiCRKRZKozDBAlxpZ0UI2UylXW6AmwSdQfguo0VGeyVKKg",
          "body": { "goal-code": "create-connection", "accept": [ "didcomm/v2" ] },
        }
    GoalCode:
      title: DIDCommV2 Out of Band Invitation Goal Code
      type: string
      example: create-connection
    ConnectionId:
      title: Connection Id
      example: "8fb9ea21-d094-4506-86b6-c7c1627d753a"
      type: string
    MessageResponse:
      type: object
      title: List message pending messages.
      properties:
        message_count:
          description: Count of messages dispatched.
          type: integer
          format: int64
          example: 10
        messages:
          description: messages dispatched.
          type: array
          items:
            type: string
          example:
              - message_1
              - message_2
              - message_3
    GetConnectionResponse:
      type: object
      title: List Connections with mediator.
      properties:
        connections:
          description: Connections with mediator.
          type: array
          items:
            type: string
          example:
            - Connection_1
            - Connection_2
            - Connection_3
    SendMessageResponse:
      type: object
      title: send message response.
      example: "{}"
    DeleteMessageResponse:
      type: object
      title: send message response.
      example: "{}"
    Code:
      type: integer
      format: int32
      title: Code is the error code of command errors.
    GenericErrorBody:
      type: object
      properties:
        code:
          $ref: '#/components/schemas/Code'
        message:
          type: string
