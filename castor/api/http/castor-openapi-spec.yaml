openapi: 3.0.1
info:
  title: Castor OpenAPI specification
  description: OpenAPI specification for Decentralized Identifiers (DID) Operations
  version: 1.0.0
  contact:
    name: Core DID
    email: atala-coredid@iohk.io
servers:
  - url: "https://api.atala.io"
tags:
  - name: DID
    description: DID REST API
  - name: DID Operations
    description: DID Operations REST API
  - name: DID Authentication
    description: DID Authentication REST API

paths:
  /dids/v1/published/create:
    post:
      tags: ["DID"]
      operationId: createPublishedDid
      summary: Publish DID with the associated DID Document to blockchain.
      description: Publish DID with the associated DID Document to blockchain.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateDIDOperation"
      responses:
        "202":
          description: Publishing DID to blockchain.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PublishDIDResponse"
          headers:
            Location:
              schema:
                type: string
              description: URL to access DID resource and publication status.
        "422":
          description: The DID publication failed.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /dids/v1/published/update/{didRef}:
    post:
      tags: ["DID"]
      operationId: updatePublishedDid
      summary: Update published DID.
      description: Update published DID.
      parameters:
        - $ref: "#/components/parameters/didRefInPath"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateDIDOperation"
      responses:
        "200":
          description: The DID resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResolveDIDResponse"
        "404":
          description: There is no DID existing for the 'didRef'.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /dids/v1/published/recover/{didRef}:
    post:
      tags: ["DID"]
      operationId: recoverPublishedDid
      summary: Recover published DID.
      description: Recover published DID.
      parameters:
        - $ref: "#/components/parameters/didRefInPath"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RecoverDIDOperation"
      responses:
        "200":
          description: The DID resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResolveDIDResponse"
        "404":
          description: There is no DID existing for the 'didRef'.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /dids/v1/unpublished/create:
    post:
      tags: ["DID"]
      operationId: createUnpublishedDid
      summary: Register DID with the associated DID Document on the server, push proof of operation to the blockchain.
      description: Register DID with the associated DID Document on the server, push proof of operation to the blockchain.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateDIDWithProof"
      responses:
        "202":
          description: Publishing DID proof to blockchain.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PublishDIDResponse"
          headers:
            Location:
              schema:
                type: string
              description: URL to access DID resource and update status.
        "422":
          description: The DID creation failed.

  /dids/v1/unpublished/update/{didRef}:
    post:
      tags: ["DID"]
      operationId: updateUnpublishedDid
      summary: Register DID update on the server, push proof of operation to blockchain.
      description: Register DID update on the server, push proof of operation to blockchain.
      parameters:
        - $ref: "#/components/parameters/didRefInPath"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateDIDWithProof"
      responses:
        "202":
          description: Publishing DID proof to blockchain.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PublishDIDResponse"
          headers:
            Location:
              schema:
                type: string
              description: URL to access DID resource and publication status.
        "422":
          description: The DID update failed.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: There is no DID existing for the 'didRef'.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /dids/v1/unpublished/recover/{didRef}:
    post:
      tags: ["DID"]
      operationId: recoverUnpublishedDid
      summary: Recover unpublished DID.
      description: Recover unpublished DID.
      parameters:
        - $ref: "#/components/parameters/didRefInPath"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RecoverDIDWithProof"
      responses:
        "200":
          description: The DID resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResolveDIDResponse"
        "404":
          description: There is no DID existing for the 'didRef'.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /dids/v1/{didRef}:
    get:
      tags: ["DID"]
      operationId: getDID
      summary: Resolves a DID, returning the associated DID Document
      description: Get a DID and associated DID Document.
      parameters:
        - $ref: "#/components/parameters/didRefInPath"
      responses:
        "200":
          description: The DID resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResolveDIDResponse"
        "404":
          description: There is no DID existing for the 'didRef'.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

    delete:
      tags: ["DID"]
      operationId: deactivateDID
      summary: Deactivates either published or unpublished DID.
      description: Deactivates either published or unpublished DID.
      parameters:
        - $ref: "#/components/parameters/didRefInPath"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeactivateDIDOperation"
      responses:
        "202":
          description: Deactivating DID.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeactivateDIDResponse"
          headers:
            Location:
              schema:
                type: string
              description: URL to access DID resource and deactivation status.
        "404":
          description: The specified DID was not found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "422":
          description: The DID deactivation failed.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /did/v1/operations/{didOperationRef}:
    get:
      tags: ["DID Operations"]
      operationId: getDidOperation
      summary: Get Did Operation.
      description: Get Did Operation.
      parameters:
        - $ref: "#/components/parameters/didOperationRefInPath"
      responses:
        "200":
          description: The DID Operation resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetDIDOperationResponse"
        "404":
          description: There is no DID Operation existing for the 'didRef'.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /did/v1/operations/:
    get:
      tags: ["DID Operations"]
      operationId: getDidOperationsByDidRef
      summary: Get All DID Operations for given DID.
      description: Get All DID Operations for given DID.
      parameters:
        - $ref: "#/components/parameters/didRefInQuery"
      responses:
        "200":
          description: All DID Operations for a given DID.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetDIDOperationsByDIDRefResponse"
        "404":
          description: There is no DID existing for the 'didRef'.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /did-authentication/challenges:
    post:
      tags: ["DID Authentication"]
      operationId: createDidAuthenticationChallenge
      summary: Create a new authentication challenge
      description: |
        Create a new authentication challenge that will be later verified
        by Castor for a relying-party.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateAuthenticationChallengeRequest"
      responses:
        "200":
          description: Authentication challenge created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateAuthenticationChallengeResponse"
        "400":
          description: A create AuthenticationChallenge payload is malformed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /did-authentication/challenge-submissions:
    post:
      tags: ["DID Authentication"]
      operationId: createDidAuthenticationChallengeSubmission
      summary: Create a verification from challenge
      description: |
        Submit a challenge submission that will be verified by Castor for a relying-party.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AuthenticationChallengeSubmissionRequest"
      responses:
        "200":
          description: Authentication challenge has been successfully verified
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationChallengeSubmissionResponse"
        "400":
          description: ChallengeSubmission is malformed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

components:
  parameters:
    didRefInPath:
      in: path
      name: didRef
      required: true
      description: DID reference.
      schema:
        type: string
    didOperationRefInPath:
      in: path
      name: didOperationRef
      required: true
      description: DID Operation Reference.
      schema:
        type: string
    didRefInQuery:
      in: query
      name: didRef
      required: true
      description: DID reference
      schema:
        type: string

  schemas:
    PublishDIDRequest:
      allOf:
        - $ref: "#/components/schemas/CreateDIDOperation"
    PublishDIDResponse:
      type: object
      properties:
        did:
          $ref: "#/components/schemas/DID"
        CurrentDidStatus:
          $ref: "#/components/schemas/DIDStatus"
        scheduledOperation:
          $ref: "#/components/schemas/DidOperation"

    UpdateDIDRequest:
      allOf:
        - $ref: "#/components/schemas/DID"
    UpdateDIDResponse:
      type: object
      properties:
        did:
          $ref: "#/components/schemas/DID"
        CurrentDidStatus:
          $ref: "#/components/schemas/DIDStatus"
        scheduledOperation:
          $ref: "#/components/schemas/DidOperation"

    DeactivateDIDResponse:
      type: object
      properties:
        did:
          $ref: "#/components/schemas/DID"
        CurrentDidStatus:
          $ref: "#/components/schemas/DIDStatus"
        scheduledOperation:
          $ref: "#/components/schemas/DidOperation"

    ResolveDIDResponse:
      type: object
      properties:
        did:
          $ref: "#/components/schemas/DID"
        CurrentDidStatus:
          $ref: "#/components/schemas/DIDStatus"

    GetDIDOperationResponse:
      allOf:
        - $ref: "#/components/schemas/DidOperation"

    GetDIDOperationsByDIDRefResponse:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/DidOperation"

    DIDStatus:
      type: string
      enum:
        - DEACTIVATED
        - PUBLISHED
        - PUBLISHING

    DidOperation:
      type: object
      properties:
        id:
          type: string
          example: "123"
        didRef:
          type: string
          example: "did:prism:123"
        type:
          $ref: "#/components/schemas/DidOperationType"
        status:
          $ref: "#/components/schemas/DidOperationStatus"

    DidOperationStatus:
      type: string
      enum:
        - EXECUTED
        - EXECUTING

    DidOperationType:
      type: string
      enum:
        - DEACTIVATE
        - UPDATE
        - PUBLISH

    DID:
      type: object
      required:
        - id
      properties:
        id:
          type: string
          example: "did:prism:mainnet:123"
        controller:
          type: string
          example: "did:prism:mainnet:456"
        verificationMethod:
          type: array
          items:
            $ref: "#/components/schemas/VerificationMethod"
        authentication:
          type: array
          items:
            oneOf:
              - $ref: "#/components/schemas/VerificationMethodRef"
              - $ref: "#/components/schemas/VerificationMethod"
        assertionMethod:
          type: array
          items:
            oneOf:
              - $ref: "#/components/schemas/VerificationMethodRef"
              - $ref: "#/components/schemas/VerificationMethod"
        keyAgreement:
          type: array
          items:
            oneOf:
              - $ref: "#/components/schemas/VerificationMethodRef"
              - $ref: "#/components/schemas/VerificationMethod"
        capabilityInvocation:
          type: array
          items:
            oneOf:
              - $ref: "#/components/schemas/VerificationMethodRef"
              - $ref: "#/components/schemas/VerificationMethod"
        service:
          type: array
          items:
            $ref: "#/components/schemas/Service"

    VerificationMethodRef:
      type: string
      example: "did:example:123456789abcdefghi#keys-1"

    VerificationMethod:
      allOf:
        - type: object
          properties:
            id:
              type: string
              example: "did:prism:123#key-1"
            type:
              type: string
              example: "JsonWebKey2020"
            controller:
              type: string
              example: "did:prism:456"
        - oneOf:
            - $ref: "#/components/schemas/JsonWebKey2020"

    CreateDIDOperation:
      type: object
      required:
        - type
        - updateCommitment
        - recoveryCommitment
        - storage
        - document
      properties:
        type:
          type: string
          example: "create"
          description: "Type of operation"
        updateCommitment:
          type: string
          example: "e0f10749ef6d7ea351cf9e23ef505a933e8386123413a044d11945fd45bad3ba"
          description: Forward reference to next update key which is SHA256 of update public key
        recoveryCommitment:
          type: string
          example: "62b4b7f16bdc50dcf3d4c8fb1edb62d73e72d2707b35f468e4e523b3c63d290a"
          description: Forward reference to next recovery key which is SHA256 of recovery public key
        storage:
          type: string
          example: "mainnet"

        document:
          type: object
          properties:
            controller:
              type: string
              example: "did:prism:mainnet:ab1cfedfl39420dkel"
            publicKeys:
              type: array
              items:
                oneOf:
                  - $ref: "#/components/schemas/PublicKey"

        services:
          type: array
          items:
            $ref: "#/components/schemas/Service"

    UpdateDIDOperation:
      type: object
      required:
        - type
        - did
        - updatePublicKey
        - previousVersion
        - delta
      properties:
        type:
          type: string
          example: "update"
          description: "Type of operation"
        did:
          type: string
          example: did:prism:unpublished:7a3a5cd1beab57a65c18c584848029c513ca27c8edfb69ceb2c7aef3d659bf44?instance=https://offchain-storage.com"
        updatePublicKey:
          type: string
          example: "EiBkRSeixqX-PhOij6PIpuGfPld5Nif5MxcrgtGCw-t6LA"
          description: "Base64 of update public key"
        previousVersion:
          type: string
          example: "a56d8c8cee25d810840c6f77b0797af36f2cb7247101a59f4607f9542c8f7aee"
          description: SHA256 of the previous operation
        delta:
          $ref: "#/components/schemas/DeltaUpdate"

    DeactivateDIDOperation:
      type: object
      required:
        - type
        - did
        - recoveryPublicKey
        - previousVersion
        - signature
      properties:
        type:
          type: string
          example: "deactivate"
        did:
          type: string
          example: "did:prism:mainnet:7a3a5cd1beab57a65c18c584848029c513ca27c8edfb69ceb2c7aef3d659bf44"
        recoveryPublicKey:
          type: string
          example: "EiBkRSeixqX-PhOij6PIpuGfPld5Nif5MxcrgtGCw-t6LA"
          description: "Base64 of recovery public key"
        previousVersion:
          type: string
          example: "a56d8c8cee25d810840c6f77b0797af36f2cb7247101a59f4607f9542c8f7aee"
          description: "SHA256 of last DID operation"
        signature:
          type: string
          example: "eyJhbGciOiJFUzI1NksifQ.eyJ1cGRhdGVLZXkiOnsia3R5IjoiRUMiLCJjcnYiOiJzZWNwMjU2azEiLCJ4Ijoid2Z3UUNKM09ScVZkbkhYa1Q4UC1MZ19HdHhCRWhYM3R5OU5VbnduSHJtdyIsInkiOiJ1aWU4cUxfVnVBblJEZHVwaFp1eExPNnFUOWtQcDNLUkdFSVJsVHBXcmZVIn0sImRlbHRhSGFzaCI6IkVpQ3BqTjQ3ZjBNcTZ4RE5VS240aFNlZ01FcW9EU19ycFEyOVd5MVY3M1ZEYncifQ.RwZK1DG5zcr4EsrRImzStb0VX5j2ZqApXZnuoAkA3IoRdErUscNG8RuxNZ0FjlJtjMJ0a-kn-_MdtR0wwvWVgg"
          description: "Base64 of signature of data in the request"

    RecoverDIDOperation:
      type: object
      properties:
        type:
          type: string
          example: "recovery"
        did:
          type: string
          example: "did:prism:mainnet:7a3a5cd1beab57a65c18c584848029c513ca27c8edfb69ceb2c7aef3d659bf44"
        recoveryPublicKey:
          type: string
          example: "EiBkRSeixqX-PhOij6PIpuGfPld5Nif5MxcrgtGCw-t6LA"
        previousVersion:
          type: string
          example: "a56d8c8cee25d810840c6f77b0797af36f2cb7247101a59f4607f9542c8f7aee"
          description: "SHA256 of last DID operation"
        delta:
          allOf:
            - $ref: "#/components/schemas/DeltaUpdate"
            - type: object
              properties:
                recoveryCommitment:
                  type: string
                  example: "42d8267c184d06898e80878a1b2f187fbf907c3055560867"
                  description: "SHA256 of recovery public key"
        signature:
          type: string
          example: "eyJhbGciOiJFUzI1NksifQ.eyJ1cGRhdGVLZXkiOnsia3R5IjoiRUMiLCJjcnYiOiJzZWNwMjU2azEiLCJ4Ijoid2Z3UUNKM09ScVZkbkhYa1Q4UC1MZ19HdHhCRWhYM3R5OU5VbnduSHJtdyIsInkiOiJ1aWU4cUxfVnVBblJEZHVwaFp1eExPNnFUOWtQcDNLUkdFSVJsVHBXcmZVIn0sImRlbHRhSGFzaCI6IkVpQ3BqTjQ3ZjBNcTZ4RE5VS240aFNlZ01FcW9EU19ycFEyOVd5MVY3M1ZEYncifQ.RwZK1DG5zcr4EsrRImzStb0VX5j2ZqApXZnuoAkA3IoRdErUscNG8RuxNZ0FjlJtjMJ0a-kn-_MdtR0wwvWVgg"
          description: "Base64 of signature of data in the request"

    CreateDIDWithProof:
      type: object
      required:
        - operation
        - proof
      properties:
        operation:
          $ref: "#/components/schemas/CreateDIDOperation"
        proof:
          $ref: "#/components/schemas/OperationProof"

    UpdateDIDWithProof:
      type: object
      required:
        - operation
        - proof
      properties:
        operation:
          $ref: "#/components/schemas/UpdateDIDOperation"
        proof:
          $ref: "#/components/schemas/OperationProofSigned"

    RecoverDIDWithProof:
      type: object
      required:
        - operation
        - proof
      properties:
        operation:
          $ref: "#/components/schemas/RecoverDIDOperation"
        proof:
          $ref: "#/components/schemas/OperationProofSigned"

    OperationProof:
      type: object
      required:
        - type
        - didHash
        - version
      properties:
        type:
          type: string
          enum:
            - create
            - update
            - deactivate
            - recover
        didHash:
          type: string
          example: "8ccfa10d3b642543c2cb80340559ba0b083ae0052a93b6168df3fdb157a203bc"
        version:
          type: string
          example: "1b819cd435f8d58b959f5c17c81d66eb37b629caad1f4d874527debb8ad7b51b"
          description: SHA256 hash of current operation

    OperationProofSigned:
      allOf:
        - $ref: "#/components/schemas/OperationProof"
        - type: object
          properties:
            signature:
              type: string
              example: "eyJhbGciOiJFUzI1NksifQ.eyJ1cGRhdGVLZXkiOnsia3R5IjoiRUMiLCJjcnYiOiJzZWNwMjU2azEiLCJ4Ijoid2Z3UUNKM09ScVZkbkhYa1Q4UC1MZ19HdHhCRWhYM3R5OU5VbnduSHJtdyIsInkiOiJ1aWU4cUxfVnVBblJEZHVwaFp1eExPNnFUOWtQcDNLUkdFSVJsVHBXcmZVIn0sImRlbHRhSGFzaCI6IkVpQ3BqTjQ3ZjBNcTZ4RE5VS240aFNlZ01Fc"
              description: "Base64 of signature of the proof"

    DeltaUpdate:
      type: object
      properties:
        updateCommitment:
          type: string
          example: "42d8267c184d06898e80878a1b2f187fbf907c3055560867"
        patches:
          type: array
          items:
            $ref: "#/components/schemas/UpdatePatch"

    PublicKey:
      allOf:
        - type: object
          properties:
            id:
              type: string
              example: "key-1"
            type:
              type: string
              example: "JsonWebKey2020"
            controller:
              type: string
              example: "did:prism:456"
            purposes:
              type: array
              items:
                type: string
                enum:
                  [
                    "authentification",
                    "assertionMethod",
                    "keyAgreement",
                    "capabilityInvocation",
                    "capabilityDelegation",
                  ]
              example: ["authentification", "assertionMethod"]
        - oneOf:
            - $ref: "#/components/schemas/JsonWebKey2020"

    JsonWebKey2020:
      type: object
      required:
        - publicKeyJwk
      properties:
        publicKeyJwk:
          $ref: "#/components/schemas/PublicKeyJwk"

    PublicKeyJwk:
      type: object
      properties:
        crv:
          type: string
          example: "P-256"
        x:
          type: string
          example: "38M1FDts7Oea7urmseiugGW7tWc3mLpJh6rKe7xINZ8"
        y:
          type: string
          example: "nDQW6XZ7b_u2Sy9slofYLlG03sOEoug3I0aAPQ0exs4"
        kty:
          type: string
          example: "EC"
        kid:
          type: string
          example: "_TKzHv2jFIyvdTGF1Dsgwngfdg3SH6TpDv0Ta1aOEkw"

    Service:
      type: object
      required:
        - id
        - type
        - serviceEndpoint
      properties:
        id:
          type: string
          example: "did:prism:123#edv"
        type:
          type: string
          enum:
            - EncryptedDataVault
            - DIDCommMessaging
          example: EncryptedDataVault
        serviceEndpoint:
          type: string
          example: "https://bar.example.com"

    UpdatePatch:
      type: object
      required:
        - action
      properties:
        action:
          type: string
          enum:
            [
              "add-public-keys",
              "remove-public-keys",
              "add-services",
              "remove-services",
              "ietf-json-patch",
            ]
          example: "add-public-keys"
        publicKeys:
          oneOf:
            - $ref: "#/components/schemas/PublicKey"

    CreateAuthenticationChallengeRequest:
      type: object
      required:
        - ttl
      properties:
        ttl:
          type: integer
          description: A number of seconds that challenge will be considered valid.
          example: 900
        state:
          type: string
          description: |
            An opaque string provided by a relying-party indicating the purpose of
            this challenge in order to avoid repurposing the challenge submission.
          example: qrcode#123
        subject:
          $ref: "#/components/schemas/AuthenticationChallengeSubject"

    CreateAuthenticationChallengeResponse:
      type: object
      required:
        - challenge
      properties:
        challenge:
          $ref: "#/components/schemas/AuthenticationChallengeJwt"
        subject:
          $ref: "#/components/schemas/AuthenticationChallengeSubject"

    AuthenticationChallengeSubmissionRequest:
      type: object
      required:
        - subject
        - challenge
        - signature
      properties:
        challenge:
          $ref: "#/components/schemas/AuthenticationChallengeJwt"
        subject:
          $ref: "#/components/schemas/AuthenticationChallengeSubject"
        signature:
          type: string
          example: 243b9ed6561ab3...5d497f609b8cd04

    AuthenticationChallengeSubmissionResponse:
      type: object
      required:
        - success
      properties:
        success:
          type: boolean
          example: true
        state:
          type: string
          description: |
            An opaque string provided by a relying-party indicating the purpose of
            this challenge in order to avoid repurposing the challenge submission.
          example: qrcode#123

    AuthenticationChallengeSubject:
      description: |
        A challenged subject that must complete the challenge.
        May refer to DID or VerificationMethod inside a DID. If VerificationMethod
        is used, it must be inside the authentication verification relationship.
      type: string
      example: "did:example:123456789abcdefghi"

    AuthenticationChallengeJwt:
      type: string
      description: |
        A JWT challenge that a user must provide to Castor SDK to create a ChallengeSubmission.
        JWT payload contains nonce, state, expiration, issuer
      example: eyJhbGciOiJIUzI1NiIsInR5c...0eu8Ri_WSPSsBTlCes2YMpuB1mHU

    ErrorResponse:
      type: object
      description: An RFC-7807 compliant data structure for reporting errors to the client
      required:
        - type
        - title
        - status
        - instance
      properties:
        type:
          type: string
          description: A URI reference that identifies the problem type.
          example: https://example.org/doc/#model-MalformedEmail
        title:
          type: string
          example: "Malformed email"
          description: |-
            A short, human-readable summary of the problem type. It does not
            change from occurrence to occurrence of the problem.
        status:
          type: integer
          format: int32
          example: 400
          description: |-
            The HTTP status code for this occurrence of the problem.
        detail:
          type: string
          description: |-
            A human-readable explanation specific to this occurrence of the problem.
          example: "The received '{}à!è@!.b}' email does not conform to the email format"
        instance:
          type: string
          example: "/problems/d914e"
          description: |-
            A URI reference that identifies the specific occurrence of the problem.
            It may or may not yield further information if dereferenced.
