---
version: "3.8"

services:
  # Mandatory PostgreSQL database for the Open Enterprise Agent
  postgres:
    image: postgres:13
    environment:
      POSTGRES_MULTIPLE_DATABASES: "castor,pollux,connect,agent"
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - ./postgres/init-script.sh:/docker-entrypoint-initdb.d/init-script.sh
      - ./postgres/max_conns.sql:/docker-entrypoint-initdb.d/max_conns.sql
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres", "-d", "agent"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Secret storage - hashicorp

  # Open Enterprise Agent
  identus-cloud-agent:
    image: ghcr.io/hyperledger/identus-cloud-agent:${AGENT_VERSION}
    environment:
      PRISM_NODE_HOST: host.docker.internal
      PRISM_NODE_PORT:
      CASTOR_DB_HOST: postgres
      POLLUX_DB_HOST: postgres
      CONNECT_DB_HOST: postgres
      AGENT_DB_HOST: postgres
      VAULT_TOKEN: null
      VAULT_APPROLE_ROLE_ID: null
      VAULT_APPROLE_SECRET_ID: null
      AUTH_HEADER: apikey
      ADMIN_AUTH_HEADER: "x-admin-api-key"
      # Configuration parameters
      AGENT_DIDCOMM_PORT:
      AGENT_HTTP_PORT:
      DIDCOMM_SERVICE_URL:
      REST_SERVICE_URL:
      POLLUX_STATUS_LIST_REGISTRY_PUBLIC_URL:
      API_KEY_ENABLED:
      STATUS_LIST_SYNC_TRIGGER_RECURRENCE_DELAY: 5 seconds
      DID_STATE_SYNC_TRIGGER_RECURRENCE_DELAY: 5 seconds
      # Secret storage configuration
      SECRET_STORAGE_BACKEND:
      VAULT_ADDR: "http://host.docker.internal:${VAULT_HTTP_PORT}"
      # Keycloak configuration
      KEYCLOAK_ENABLED:
      KEYCLOAK_URL: "http://host.docker.internal:${KEYCLOAK_HTTP_PORT}"
      KEYCLOAK_REALM:
      KEYCLOAK_CLIENT_ID:
      KEYCLOAK_CLIENT_SECRET:
      KEYCLOAK_UMA_AUTO_UPGRADE_RPT: true # no configurable at the moment
      # Kafka Messaging Service
      DEFAULT_KAFKA_ENABLED: true
    depends_on:
      postgres:
        condition: service_healthy
      init-kafka:
        condition: service_healthy
    ports:
      - "${AGENT_DIDCOMM_PORT}:${AGENT_DIDCOMM_PORT}"
      - "${AGENT_HTTP_PORT}:${AGENT_HTTP_PORT}"
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "-f",
          "http://identus-cloud-agent:${AGENT_HTTP_PORT}/_system/health",
        ]
      interval: 10s
      timeout: 5s
      retries: 5
    # Extra hosts for Linux networking
    extra_hosts:
      - "host.docker.internal:host-gateway"
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
  #    ports:
  #      - 22181:2181

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    #    ports:
    #      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: false
    healthcheck:
      test:
        [
          "CMD",
          "kafka-topics",
          "--list",
          "--bootstrap-server",
          "localhost:9092",
        ]
      interval: 5s
      timeout: 10s
      retries: 5

  init-kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      kafka:
        condition: service_healthy
    entrypoint: ["/bin/sh", "-c"]
    command: |
      "
      # blocks until kafka is reachable
      kafka-topics --bootstrap-server kafka:9092 --list
      echo -e 'Creating kafka topics'

      # Connect
      kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic connect --replication-factor 1 --partitions 5
      kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic connect-retry-1 --replication-factor 1 --partitions 5
      kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic connect-retry-2 --replication-factor 1 --partitions 5
      kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic connect-retry-3 --replication-factor 1 --partitions 5
      kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic connect-retry-4 --replication-factor 1 --partitions 5
      kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic connect-DLQ --replication-factor 1 --partitions 1

      # Issue
      kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic issue --replication-factor 1 --partitions 5
      kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic issue-retry-1 --replication-factor 1 --partitions 5
      kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic issue-retry-2 --replication-factor 1 --partitions 5
      kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic issue-retry-3 --replication-factor 1 --partitions 5
      kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic issue-retry-4 --replication-factor 1 --partitions 5
      kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic issue-DLQ --replication-factor 1 --partitions 1

      # Present
      kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic present --replication-factor 1 --partitions 5
      kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic present-retry-1 --replication-factor 1 --partitions 5
      kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic present-retry-2 --replication-factor 1 --partitions 5
      kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic present-retry-3 --replication-factor 1 --partitions 5
      kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic present-retry-4 --replication-factor 1 --partitions 5
      kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic present-DLQ --replication-factor 1 --partitions 1

      # DID Publication State Sync
      kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic sync-did-state --replication-factor 1 --partitions 5

      # Status List Sync
      kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic sync-status-list --replication-factor 1 --partitions 5

      tail -f /dev/null
      "
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "kafka-topics --bootstrap-server kafka:9092 --list | grep -q 'sync-status-list'",
        ]
      interval: 5s
      timeout: 10s
      retries: 5
