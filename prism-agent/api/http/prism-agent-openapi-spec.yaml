openapi: 3.0.1
info:
  title: PrismAgent OpenAPI specification
  description: OpenAPI specification for Decentralized Identifiers (DID) Operations
  version: 1.0.0
  contact:
    name: Core DID
    email: atala-coredid@iohk.io
servers:
  - url: "http://localhost/prism-agent"
tags:
  - name: DID
    description: DID REST API
  - name: DID Operations
    description: DID Operations REST API
  - name: DID Authentication
    description: DID Authentication REST API

paths:
  /dids:
    post:
      tags: [ "DID" ]
      operationId: createDid
      summary: Create DID with the associated DID Document with the option to publish to blockchain.
      description: Create DID with the associated DID Document with the option to publish to blockchain.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./castor/schemas.yaml#/components/schemas/CreateDIDRequest"
      responses:
        "200":
          description: Created DID.
          content:
            application/json:
              schema:
                $ref: "./castor/schemas.yaml#/components/schemas/DIDResponse"
        "202":
          description: Created DID. Publishing DID or Proof to Blockchain.
          content:
            application/json:
              schema:
                $ref: "./castor/schemas.yaml#/components/schemas/DIDResponseWithAsyncOutcome"
          headers:
            Location:
              schema:
                type: string
              description: URL to access DID resource and publication status.
        "422":
          description: The DID publication failed.
          content:
            application/json:
              schema:
                $ref: "./castor/schemas.yaml#/components/schemas/ErrorResponse"

  /dids/{didRef}:
    put:
      tags: [ "DID" ]
      operationId: updateDid
      summary: Update DID.
      description: Update DID.
      parameters:
        - $ref: "./castor/parameters.yaml#/components/parameters/didRefInPath"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./castor/schemas.yaml#/components/schemas/UpdateDIDRequest"
      responses:
        "200":
          description: Updated DID.
          content:
            application/json:
              schema:
                $ref: "./castor/schemas.yaml#/components/schemas/DIDResponse"
        "202":
          description: Updated DID. Publishing Updated DID or Update Proof to Blockchain.
          content:
            application/json:
              schema:
                $ref: "./castor/schemas.yaml#/components/schemas/DIDResponseWithAsyncOutcome"
          headers:
            Location:
              schema:
                type: string
              description: URL to access DID resource and publication status.
        "422":
          description: The DID Update failed.
          content:
            application/json:
              schema:
                $ref: "./castor/schemas.yaml#/components/schemas/ErrorResponse"
        "404":
          description: There is no DID existing for the 'didRef'.
          content:
            application/json:
              schema:
                $ref: "./castor/schemas.yaml#/components/schemas/ErrorResponse"

    get:
      tags: [ "DID" ]
      operationId: getDid
      summary: Get DID.
      description: Get DID.
      parameters:
        - $ref: "./castor/parameters.yaml#/components/parameters/didRefInPath"
      responses:
        "200":
          description: The DID resource
          content:
            application/json:
              schema:
                $ref: "./castor/schemas.yaml#/components/schemas/DIDResponse"
        "404":
          description: There is no DID existing for the 'didRef'.
          content:
            application/json:
              schema:
                $ref: "./castor/schemas.yaml#/components/schemas/ErrorResponse"

  /dids/{didRef}/deactivations:
    put:
      tags: [ "DID" ]
      operationId: deactivateDID
      summary: Deactivates either published or unpublished DID.
      description: Deactivates either published or unpublished DID.
      parameters:
        - $ref: "./castor/parameters.yaml#/components/parameters/didRefInPath"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./castor/schemas.yaml#/components/schemas/DeactivateDIDRequest"
      responses:
        "200":
          description: DID Deactivated.
          content:
            application/json:
              schema:
                $ref: "./castor/schemas.yaml#/components/schemas/DIDResponse"
        "202":
          description: Deactivating DID.
          content:
            application/json:
              schema:
                $ref: "./castor/schemas.yaml#/components/schemas/DIDResponseWithAsyncOutcome"
          headers:
            Location:
              schema:
                type: string
              description: URL to access DID resource and publication status.
        "422":
          description: The DID Deactivation failed.
          content:
            application/json:
              schema:
                $ref: "./castor/schemas.yaml#/components/schemas/ErrorResponse"
        "404":
          description: There is no DID existing for the 'didRef'.
          content:
            application/json:
              schema:
                $ref: "./castor/schemas.yaml#/components/schemas/ErrorResponse"

  /dids/{didRef}/recoveries:
    post:
      tags: [ "DID" ]
      operationId: recoverDid
      summary: Recover DID.
      description: Recover DID.
      parameters:
        - $ref: "./castor/parameters.yaml#/components/parameters/didRefInPath"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./castor/schemas.yaml#/components/schemas/RecoverDIDRequest"
      responses:
        "200":
          description: Recovered DID.
          content:
            application/json:
              schema:
                $ref: "./castor/schemas.yaml#/components/schemas/DIDResponse"
        "202":
          description: Recovered DID. Publishing Recovered DID or Recovery Proof to Blockchain.
          content:
            application/json:
              schema:
                $ref: "./castor/schemas.yaml#/components/schemas/DIDResponseWithAsyncOutcome"
          headers:
            Location:
              schema:
                type: string
              description: URL to access DID resource and publication status.
        "422":
          description: The DID Update failed.
          content:
            application/json:
              schema:
                $ref: "./castor/schemas.yaml#/components/schemas/ErrorResponse"
        "404":
          description: There is no DID existing for the 'didRef'.
          content:
            application/json:
              schema:
                $ref: "./castor/schemas.yaml#/components/schemas/ErrorResponse"

  /did-operations/{didOperationRef}:
    get:
      tags: [ "DID Operations" ]
      operationId: getDidOperation
      summary: Get Did Operation.
      description: Get Did Operation.
      parameters:
        - $ref: "./castor/parameters.yaml#/components/parameters/didOperationRefInPath"
      responses:
        "200":
          description: The DID Operation resource
          content:
            application/json:
              schema:
                $ref: "./castor/schemas.yaml#/components/schemas/DidOperation"
        "404":
          description: There is no DID Operation existing for the 'didRef'.
          content:
            application/json:
              schema:
                $ref: "./castor/schemas.yaml#/components/schemas/ErrorResponse"

  /dids/{didRef}/operations:
    get:
      tags: [ "DID Operations" ]
      operationId: getDidOperationsByDidRef
      summary: Get All DID Operations for given DID.
      description: Get All DID Operations for given DID.
      parameters:
        - $ref: "./castor/parameters.yaml#/components/parameters/didRefInPath"
      responses:
        "200":
          description: All DID Operations for a given DID.
          content:
            application/json:
              schema:
                $ref: "./castor/schemas.yaml#/components/schemas/GetDIDOperationsByDIDRefResponse"
        "404":
          description: There is no DID existing for the 'didRef'.
          content:
            application/json:
              schema:
                $ref: "./castor/schemas.yaml#/components/schemas/ErrorResponse"

  /authentication/challenges:
    post:
      tags: [ "DID Authentication" ]
      operationId: createDidAuthenticationChallenge
      summary: Create a new authentication challenge
      description: |
        Create a new authentication challenge that will be later verified
        by Castor for a relying-party.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./castor/schemas.yaml#/components/schemas/CreateAuthenticationChallengeRequest"
      responses:
        "200":
          description: Authentication challenge created successfully
          content:
            application/json:
              schema:
                $ref: "./castor/schemas.yaml#/components/schemas/CreateAuthenticationChallengeResponse"
        "400":
          description: A create AuthenticationChallenge payload is malformed
          content:
            application/json:
              schema:
                $ref: "./castor/schemas.yaml#/components/schemas/ErrorResponse"

  /authentication/challenge-submissions:
    post:
      tags: [ "DID Authentication" ]
      operationId: createDidAuthenticationChallengeSubmission
      summary: Create a verification from challenge
      description: |
        Submit a challenge submission that will be verified by Castor for a relying-party.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./castor/schemas.yaml#/components/schemas/AuthenticationChallengeSubmissionRequest"
      responses:
        "200":
          description: Authentication challenge has been successfully verified
          content:
            application/json:
              schema:
                $ref: "./castor/schemas.yaml#/components/schemas/AuthenticationChallengeSubmissionResponse"
        "400":
          description: ChallengeSubmission is malformed
          content:
            application/json:
              schema:
                $ref: "./castor/schemas.yaml#/components/schemas/ErrorResponse"
