components:
  schemas:
    DIDResponse:
      type: object
      required:
        - did
        - type
        - deactivated
      properties:
        did:
          $ref: "#/components/schemas/DID"
        deactivated:
          type: boolean

    DIDOperationResponse:
      type: object
      required:
        - scheduledOperation
      properties:
        scheduledOperation:
          $ref: "#/components/schemas/DidOperationSubmission"

    DID:
      type: object
      required:
        - id
      properties:
        id:
          type: string
          example: "did:prism:mainnet:123"
        controller:
          type: string
          example: "did:prism:mainnet:456"
        verificationMethod:
          type: array
          items:
            $ref: "#/components/schemas/VerificationMethod"
        authentication:
          type: array
          items:
            $ref: "#/components/schemas/VerificationMethodOrRef"
        assertionMethod:
          type: array
          items:
            $ref: "#/components/schemas/VerificationMethodOrRef"
        keyAgreement:
          type: array
          items:
            $ref: "#/components/schemas/VerificationMethodOrRef"
        capabilityInvocation:
          type: array
          items:
            $ref: "#/components/schemas/VerificationMethodOrRef"
        service:
          type: array
          items:
            $ref: "#/components/schemas/Service"

    VerificationMethodOrRef:
      description: |
        A reference to VerificationMethod or VerificationMethod object.
        Exactly one property must be present to be valid.
      type: object
      properties:
        ref:
          type: string
          example: "did:example:123456789abcdefghi#keys-1"
        verificationMethod:
          $ref: "#/components/schemas/VerificationMethod"

    VerificationMethod:
      type: object
      required:
        - id
        - type
        - controller
        - jsonWebKey2020
      properties:
        id:
          type: string
          example: "did:prism:123#key-1"
        type:
          type: string
          example: "JsonWebKey2020"
        controller:
          type: string
          example: "did:prism:456"
        jsonWebKey2020:
          $ref: "#/components/schemas/JsonWebKey2020"

    CreateDIDRequest:
      type: object
      required:
        - updateCommitment
        - recoveryCommitment
        - storage
        - document
      properties:
        updateCommitment:
          type: string
          example: "e0f10749ef6d7ea351cf9e23ef505a933e8386123413a044d11945fd45bad3ba"
          description: Forward reference to next update key which is SHA256 of update public key
        recoveryCommitment:
          type: string
          example: "62b4b7f16bdc50dcf3d4c8fb1edb62d73e72d2707b35f468e4e523b3c63d290a"
          description: Forward reference to next recovery key which is SHA256 of recovery public key
        storage:
          type: string
          example: "mainnet"
        document:
          type: object
          properties:
            publicKeys:
              type: array
              items:
                $ref: "#/components/schemas/PublicKey"
            services:
              type: array
              items:
                $ref: "#/components/schemas/Service"

    UpdateDIDRequest:
      type: object
      required:
        - did
        - updatePublicKey
        - previousVersion
        - delta
      properties:
        did:
          type: string
          example: did:prism:unpublished:7a3a5cd1beab57a65c18c584848029c513ca27c8edfb69ceb2c7aef3d659bf44?instance=https://offchain-storage.com"
        updatePublicKey:
          type: string
          example: "EiBkRSeixqX-PhOij6PIpuGfPld5Nif5MxcrgtGCw-t6LA"
          description: "Base64 of update public key"
        previousVersion:
          type: string
          example: "a56d8c8cee25d810840c6f77b0797af36f2cb7247101a59f4607f9542c8f7aee"
          description: SHA256 of the previous operation
        delta:
          $ref: "#/components/schemas/DeltaUpdate"

    DeactivateDIDRequest:
      type: object
      required:
        - did
        - recoveryPublicKey
        - previousVersion
        - signature
      properties:
        did:
          type: string
          example: "did:prism:mainnet:7a3a5cd1beab57a65c18c584848029c513ca27c8edfb69ceb2c7aef3d659bf44"
        recoveryPublicKey:
          type: string
          example: "EiBkRSeixqX-PhOij6PIpuGfPld5Nif5MxcrgtGCw-t6LA"
          description: "Base64 of recovery public key"
        previousVersion:
          type: string
          example: "a56d8c8cee25d810840c6f77b0797af36f2cb7247101a59f4607f9542c8f7aee"
          description: "SHA256 of last DID operation"
        signature:
          type: string
          example: "eyJhbGciOiJFUzI1NksifQ.eyJ1cGRhdGVLZXkiOnsia3R5IjoiRUMiLCJjcnYiOiJzZWNwMjU2azEiLCJ4Ijoid2Z3UUNKM09ScVZkbkhYa1Q4UC1MZ19HdHhCRWhYM3R5OU5VbnduSHJtdyIsInkiOiJ1aWU4cUxfVnVBblJEZHVwaFp1eExPNnFUOWtQcDNLUkdFSVJsVHBXcmZVIn0sImRlbHRhSGFzaCI6IkVpQ3BqTjQ3ZjBNcTZ4RE5VS240aFNlZ01FcW9EU19ycFEyOVd5MVY3M1ZEYncifQ.RwZK1DG5zcr4EsrRImzStb0VX5j2ZqApXZnuoAkA3IoRdErUscNG8RuxNZ0FjlJtjMJ0a-kn-_MdtR0wwvWVgg"
          description: "Base64 of signature of data in the request"

    RecoverDIDRequest:
      type: object
      properties:
        did:
          type: string
          example: "did:prism:mainnet:7a3a5cd1beab57a65c18c584848029c513ca27c8edfb69ceb2c7aef3d659bf44"
        recoveryPublicKey:
          type: string
          example: "EiBkRSeixqX-PhOij6PIpuGfPld5Nif5MxcrgtGCw-t6LA"
        previousVersion:
          type: string
          example: "a56d8c8cee25d810840c6f77b0797af36f2cb7247101a59f4607f9542c8f7aee"
          description: "SHA256 of last DID operation"
        delta:
          $ref: "#/components/schemas/Delta"
        signature:
          type: string
          example: "eyJhbGciOiJFUzI1NksifQ.eyJ1cGRhdGVLZXkiOnsia3R5IjoiRUMiLCJjcnYiOiJzZWNwMjU2azEiLCJ4Ijoid2Z3UUNKM09ScVZkbkhYa1Q4UC1MZ19HdHhCRWhYM3R5OU5VbnduSHJtdyIsInkiOiJ1aWU4cUxfVnVBblJEZHVwaFp1eExPNnFUOWtQcDNLUkdFSVJsVHBXcmZVIn0sImRlbHRhSGFzaCI6IkVpQ3BqTjQ3ZjBNcTZ4RE5VS240aFNlZ01FcW9EU19ycFEyOVd5MVY3M1ZEYncifQ.RwZK1DG5zcr4EsrRImzStb0VX5j2ZqApXZnuoAkA3IoRdErUscNG8RuxNZ0FjlJtjMJ0a-kn-_MdtR0wwvWVgg"
          description: "Base64 of signature of data in the request"

    CreateManagedDidRequest:
      type: object
      required:
        - documentTemplate
      properties:
        documentTemplate:
          type: object
          required:
            - storage
            - publicKeys
            - services
          properties:
            storage:
              type: string
              example: "mainnet"
            publicKeys:
              type: array
              items:
                type: object
                required:
                  - id
                  - purposes
                properties:
                  id:
                    type: string
                    description: Identifier of a verification material in the DID Document
                    example: key-01
                  purposes:
                    type: array
                    items:
                      type: string
                      enum:
                        [
                          "authentication",
                          "assertionMethod",
                          "keyAgreement",
                          "capabilityInvocation",
                          "capabilityDelegation",
                        ]
                    example: [ "authentication", "assertionMethod" ]
            services:
              type: array
              items:
                $ref: "#/components/schemas/Service"

    CreateManagedDIDResponse:
      type: object
      required:
        - did
        - longFormDid
      properties:
        did:
          $ref: "#/components/schemas/DID"
        longFormDid:
          type: string
          description: A long-form DID for the created DID
          example: did:prism:1:abc123:abc123

    Delta:
      type: object
      required:
        - deltaUpdate
        - recoveryCommitment
      properties:
        deltaUpdate:
          $ref: "#/components/schemas/DeltaUpdate"
        recoveryCommitment:
          type: string
          example: "42d8267c184d06898e80878a1b2f187fbf907c3055560867"
          description: "SHA256 of recovery public key"

    DeltaUpdate:
      type: object
      properties:
        updateCommitment:
          type: string
          example: "42d8267c184d06898e80878a1b2f187fbf907c3055560867"
        patches:
          type: array
          items:
            $ref: "#/components/schemas/UpdatePatch"

    PublicKey:
      type: object
      required:
        - id
        - type
        - controller
        - purposes
        - jsonWebKey2020
      properties:
        id:
          type: string
          example: "key-1"
        type:
          type: string
          example: "JsonWebKey2020"
        controller:
          type: string
          example: "did:prism:456"
        purposes:
          type: array
          items:
            type: string
            enum:
              [
                "authentication",
                "assertionMethod",
                "keyAgreement",
                "capabilityInvocation",
                "capabilityDelegation",
              ]
          example: [ "authentication", "assertionMethod" ]
        jsonWebKey2020:
          $ref: "#/components/schemas/JsonWebKey2020"

    JsonWebKey2020:
      type: object
      required:
        - publicKeyJwk
      properties:
        publicKeyJwk:
          $ref: "#/components/schemas/PublicKeyJwk"

    PublicKeyJwk:
      type: object
      properties:
        crv:
          type: string
          example: "secp256k1"
        x:
          type: string
          example: "38M1FDts7Oea7urmseiugGW7tWc3mLpJh6rKe7xINZ8"
        y:
          type: string
          example: "nDQW6XZ7b_u2Sy9slofYLlG03sOEoug3I0aAPQ0exs4"
        kty:
          type: string
          example: "EC"
        kid:
          type: string
          example: "_TKzHv2jFIyvdTGF1Dsgwngfdg3SH6TpDv0Ta1aOEkw"

    Service:
      type: object
      required:
        - id
        - type
        - serviceEndpoint
      properties:
        id:
          type: string
          example: "did:prism:123#edv"
        type:
          type: string
          enum:
            - MediatorService
          example: MediatorService
        serviceEndpoint:
          type: string
          example: "https://bar.example.com"

    UpdatePatch:
      type: object
      required:
        - action
      properties:
        action:
          type: string
          enum:
            [
              "add-public-keys",
              "remove-public-keys",
              "add-services",
              "remove-services",
              "ietf-json-patch",
            ]
          example: "add-public-keys"
        publicKeys:
          $ref: "#/components/schemas/PublicKey"

    # ----------------------------------
    # ASYNC OPERATIONS
    # ----------------------------------
    GetDIDOperationsByDIDRefResponse:
      type: array
      items:
        $ref: "#/components/schemas/DidOperation"

    DidOperation:
      type: object
      required:
        - id
        - didRef
        - type
        - status
      properties:
        id:
          type: string
          example: "123"
        didRef:
          type: string
          example: "did:prism:123"
        type:
          $ref: "#/components/schemas/DidOperationType"
        status:
          $ref: "#/components/schemas/DidOperationStatus"

    DidOperationSubmission:
      type: object
      required:
        - id
        - didRef
      properties:
        id:
          type: string
          example: "123"
        didRef:
          type: string
          example: "did:prism:123"

    DidOperationStatus:
      type: string
      enum:
        - EXECUTED
        - EXECUTING

    DidOperationType:
      type: string
      enum:
        - CREATE
        - UPDATE
        - DEACTIVATE
        - RECOVER

    # ----------------------------------
    # AUTHENTICATION
    # ----------------------------------
    CreateAuthenticationChallengeRequest:
      type: object
      required:
        - ttl
      properties:
        ttl:
          type: number
          description: A number of seconds that challenge will be considered valid.
          example: 900
        state:
          type: string
          description: |
            An opaque string provided by a relying-party indicating the purpose of
            this challenge in order to avoid repurposing the challenge submission.
          example: qrcode#123
        subject:
          $ref: "#/components/schemas/AuthenticationChallengeSubject"

    CreateAuthenticationChallengeResponse:
      type: object
      required:
        - challenge
      properties:
        challenge:
          $ref: "#/components/schemas/AuthenticationChallengeJwt"
        subject:
          $ref: "#/components/schemas/AuthenticationChallengeSubject"

    AuthenticationChallengeSubmissionRequest:
      type: object
      required:
        - subject
        - challenge
        - signature
      properties:
        challenge:
          $ref: "#/components/schemas/AuthenticationChallengeJwt"
        subject:
          $ref: "#/components/schemas/AuthenticationChallengeSubject"
        signature:
          type: string
          example: 243b9ed6561ab3...5d497f609b8cd04

    AuthenticationChallengeSubmissionResponse:
      type: object
      required:
        - success
      properties:
        success:
          type: boolean
          example: true
        state:
          type: string
          description: |
            An opaque string provided by a relying-party indicating the purpose of
            this challenge in order to avoid repurposing the challenge submission.
          example: qrcode#123

    AuthenticationChallengeSubject:
      description: |
        A challenged subject that must complete the challenge.
        May refer to DID or VerificationMethod inside a DID. If VerificationMethod
        is used, it must be inside the authentication verification relationship.
      type: string
      example: "did:example:123456789abcdefghi"

    AuthenticationChallengeJwt:
      type: string
      description: |
        A JWT challenge that a user must provide to Castor SDK to create a ChallengeSubmission.
        JWT payload contains nonce, state, expiration, issuer
      example: eyJhbGciOiJIUzI1NiIsInR5c...0eu8Ri_WSPSsBTlCes2YMpuB1mHU

    ErrorResponse:
      type: object
      description: An RFC-7807 compliant data structure for reporting errors to the client
      required:
        - type
        - title
        - status
        - instance
      properties:
        type:
          type: string
          description: A URI reference that identifies the problem type.
          example: https://example.org/doc/#model-MalformedEmail
        title:
          type: string
          example: "Malformed email"
          description: |-
            A short, human-readable summary of the problem type. It does not
            change from occurrence to occurrence of the problem.
        status:
          type: integer
          format: int32
          example: 400
          description: |-
            The HTTP status code for this occurrence of the problem.
        detail:
          type: string
          description: |-
            A human-readable explanation specific to this occurrence of the problem.
          example: "The received '{}à!è@!.b}' email does not conform to the email format"
        instance:
          type: string
          example: "/problems/d914e"
          description: |-
            A URI reference that identifies the specific occurrence of the problem.
            It may or may not yield further information if dereferenced.
