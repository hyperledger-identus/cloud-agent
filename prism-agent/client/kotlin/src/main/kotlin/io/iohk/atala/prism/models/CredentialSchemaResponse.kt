/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package io.iohk.atala.prism.models

import io.iohk.atala.prism.models.Proof

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * @param guid Globally unique id of the credential schema.It's composed from the bytes of the string that contain the `author`, `name`, and `version` values.The string format looks like the resource identifier: `author`/`id`?version=`version`
 * @param id A locally unique identifier to address the schema. UUID is generated by the backend.
 * @param name A human-readable name for the credential schema. A piece of Metadata.
 * @param version Denotes the revision of a given Credential Schema. It should follow semantic version convention to describe the impact of the schema evolution.
 * @param description A human-readable description of the credential schema
 * @param type This field resolves to a JSON schema with details about the schema metadata that applies to the schema. A piece of Metadata.
 * @param schema Valid JSON Schema where the Credential Schema data fields are defined. A piece of Metadata
 * @param author DID of the identity which authored the credential schema. A piece of Metadata.
 * @param authored [RFC3339](https://www.rfc-editor.org/rfc/rfc3339) date on which the credential schema was created. A piece of Metadata.
 * @param kind A string that identifies the type of resource being returned in the response.
 * @param self The URL that uniquely identifies the resource being returned in the response.
 * @param longId Resource id of the credential schema. Contains the `author`'s DID, `id` and `version` fields.
 * @param tags Tokens that allow to lookup and filter the credential schema records.
 * @param proof 
 */


data class CredentialSchemaResponse (

    /* Globally unique id of the credential schema.It's composed from the bytes of the string that contain the `author`, `name`, and `version` values.The string format looks like the resource identifier: `author`/`id`?version=`version` */
    @Json(name = "guid")
    val guid: java.util.UUID,

    /* A locally unique identifier to address the schema. UUID is generated by the backend. */
    @Json(name = "id")
    val id: kotlin.String,

    /* A human-readable name for the credential schema. A piece of Metadata. */
    @Json(name = "name")
    val name: kotlin.String,

    /* Denotes the revision of a given Credential Schema. It should follow semantic version convention to describe the impact of the schema evolution. */
    @Json(name = "version")
    val version: kotlin.String,

    /* A human-readable description of the credential schema */
    @Json(name = "description")
    val description: kotlin.String,

    /* This field resolves to a JSON schema with details about the schema metadata that applies to the schema. A piece of Metadata. */
    @Json(name = "type")
    val type: kotlin.String,

    /* Valid JSON Schema where the Credential Schema data fields are defined. A piece of Metadata */
    @Json(name = "schema")
    val schema: kotlin.Any?,

    /* DID of the identity which authored the credential schema. A piece of Metadata. */
    @Json(name = "author")
    val author: kotlin.String,

    /* [RFC3339](https://www.rfc-editor.org/rfc/rfc3339) date on which the credential schema was created. A piece of Metadata. */
    @Json(name = "authored")
    val authored: java.time.OffsetDateTime,

    /* A string that identifies the type of resource being returned in the response. */
    @Json(name = "kind")
    val kind: kotlin.String,

    /* The URL that uniquely identifies the resource being returned in the response. */
    @Json(name = "self")
    val self: kotlin.String,

    /* Resource id of the credential schema. Contains the `author`'s DID, `id` and `version` fields. */
    @Json(name = "longId")
    val longId: kotlin.String? = null,

    /* Tokens that allow to lookup and filter the credential schema records. */
    @Json(name = "tags")
    val tags: kotlin.collections.List<kotlin.String>? = null,

    @Json(name = "proof")
    val proof: Proof? = null

)

