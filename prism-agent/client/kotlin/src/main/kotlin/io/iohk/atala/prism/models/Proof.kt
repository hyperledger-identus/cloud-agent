/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package io.iohk.atala.prism.models


import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * A digital signature over the Credential Schema for the sake of asserting authorship. A piece of Metadata.
 *
 * @param type The type of cryptographic signature algorithm used to generate the proof.
 * @param created The date and time at which the proof was created, in UTC format. This field is used to ensure that the proof was generated before or at the same time as the credential schema itself.
 * @param verificationMethod The verification method used to generate the proof. This is usually a DID and key ID combination that can be used to look up the public key needed to verify the proof.
 * @param proofPurpose The purpose of the proof (for example: `assertionMethod`). This indicates that the proof is being used to assert that the issuer really issued this credential schema instance.
 * @param proofValue The cryptographic signature value that was generated using the private key associated with the verification method, and which can be used to verify the proof.
 * @param jws The JSON Web Signature (JWS) that contains the proof information.
 * @param domain It specifies the domain context within which the credential schema and proof are being used
 */


data class Proof (

    /* The type of cryptographic signature algorithm used to generate the proof. */
    @Json(name = "type")
    val type: kotlin.String,

    /* The date and time at which the proof was created, in UTC format. This field is used to ensure that the proof was generated before or at the same time as the credential schema itself. */
    @Json(name = "created")
    val created: java.time.OffsetDateTime,

    /* The verification method used to generate the proof. This is usually a DID and key ID combination that can be used to look up the public key needed to verify the proof. */
    @Json(name = "verificationMethod")
    val verificationMethod: kotlin.String,

    /* The purpose of the proof (for example: `assertionMethod`). This indicates that the proof is being used to assert that the issuer really issued this credential schema instance. */
    @Json(name = "proofPurpose")
    val proofPurpose: kotlin.String,

    /* The cryptographic signature value that was generated using the private key associated with the verification method, and which can be used to verify the proof. */
    @Json(name = "proofValue")
    val proofValue: kotlin.String,

    /* The JSON Web Signature (JWS) that contains the proof information. */
    @Json(name = "jws")
    val jws: kotlin.String,

    /* It specifies the domain context within which the credential schema and proof are being used */
    @Json(name = "domain")
    val domain: kotlin.String? = null

)

