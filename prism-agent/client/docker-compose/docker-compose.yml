---
version: "3.8"

services:
  db:
    image: postgres:13
    environment:
      POSTGRES_MULTIPLE_DATABASES: "castor,pollux,connect,iris,agent,node_db"
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - pg_data_db:/var/lib/postgresql/data
      - ./postgres/init-script.sh:/docker-entrypoint-initdb.d/init-script.sh
      - ./postgres/max_conns.sql:/docker-entrypoint-initdb.d/max_conns.sql

    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres", "-d", "node_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  ##########################
  # Building-blocks
  ##########################
  prism-agent:
    container_name: prism-agent-svc
    image: ghcr.io/input-output-hk/prism-agent:${PRISM_AGENT_VERSION}
    ports:
      - "${PORT}:${PORT}"
    environment:
      IRIS_HOST: iris
      IRIS_PORT: 8081
      CASTOR_DB_HOST: db
      CASTOR_DB_PORT: 5432
      CASTOR_DB_NAME: castor
      CASTOR_DB_USER: postgres
      CASTOR_DB_PASSWORD: postgres
      POLLUX_DB_HOST: db
      POLLUX_DB_PORT: 5432
      POLLUX_DB_NAME: pollux
      POLLUX_DB_USER: postgres
      POLLUX_DB_PASSWORD: postgres
      CONNECT_DB_HOST: db
      CONNECT_DB_PORT: 5432
      CONNECT_DB_NAME: connect
      CONNECT_DB_USER: postgres
      CONNECT_DB_PASSWORD: postgres
      AGENT_DB_HOST: db
      AGENT_DB_PORT: 5432
      AGENT_DB_NAME: agent
      AGENT_DB_USER: postgres
      AGENT_DB_PASSWORD: postgres
      AGENT_HTTP_PORT: ${PORT}
      DIDCOMM_SERVICE_PORT: 8081
      DIDCOMM_SERVICE_URL: http://localhost:8081
      PRISM_NODE_HOST: prism-node
      PRISM_NODE_PORT: 50053
      VAULT_ADDR: http://vault-server:8200
      VAULT_TOKEN: root
      DEV_MODE: "true"
      WALLET_SEED: 6132a730dfe51e5d7f46057b4f6500cdf7b2770fb1a9b566afb80896d37347866fca3e39fcdd8c7923ea36830704e505dff7f5666677f5dd45750c7dc0e5bfe2
    depends_on:
      db:
        condition: service_healthy
      vault-server:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${PORT}/connections"]
      interval: 30s
      timeout: 10s
      retries: 5

  vault-server:
    image: vault:1.13.3
    environment:
      VAULT_ADDR: "http://0.0.0.0:8200"
      VAULT_DEV_ROOT_TOKEN_ID: root
    command: server -dev -dev-root-token-id=root
    cap_add:
      - IPC_LOCK
    healthcheck:
      test: ["CMD", "vault", "status"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  pg_data_db:
  pgadmin:
  enterprise_pg_data_db:
  mediator_mongo_db:
