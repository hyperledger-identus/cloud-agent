syntax = "proto3";

import "google/protobuf/timestamp.proto";
import "scalapb/scalapb.proto";

import "protocol/did_operations.proto";
import "protocol/dlt.proto";
import "protocol/vc_operations.proto";

option (scalapb.options) = {
  no_default_values_in_constructor: true
  package_name: "io.iohk.atala.iris.proto"
};

message IrisOperationId {
  bytes id = 1;
}

message IrisOperationOutcome {
  bytes operation_id = 1;
}

enum IrisOperationStatus {
  IRIS_OPERATION_STATUS_PENDING_UNSPECIFIED = 0;
  IRIS_OPERATION_STATUS_SUBMITTED = 1;
  IRIS_OPERATION_STATUS_ROLLED_BACK = 2;
  IRIS_OPERATION_STATUS_CONFIRMED = 3;
};

message IrisOperationInfo {
  bytes operation_id = 1;
  oneof operation {
    CreateDid create_did = 2;
    UpdateDid update_did = 3;
    RecoverDid recovery_did = 4;
    DeactivateDid deactivate_did = 5;
    IssueCredentialsBatch issue_credentials_batch = 6;
    RevokeCredentials revoke_credentials = 7;
  }
}

message IrisBatchRequest {
  // Hex representation of transaction id
  // There is one to one correspondence between transaction and batch in it.
  string last_seen_transaction_id = 1;
}

message ConfirmedIrisBatch {
  int32 block_level = 1;
  google.protobuf.Timestamp block_timestamp = 2;
  string transaction_id = 3;
  IrisBatch batch = 4;
}

service IrisService {
  rpc ScheduleOperation(IrisOperation) returns (IrisOperationOutcome) {}
  rpc GetOperation(IrisOperationId) returns (IrisOperationInfo) {}
  rpc GetIrisBatchStream(IrisBatchRequest) returns (stream ConfirmedIrisBatch) {}
}
