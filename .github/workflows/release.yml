name: Release

concurrency:
  group: release

on:
  workflow_dispatch:
  push:
    branches:
      - "main"

jobs:
  release:
    if: ${{ !contains(github.event.head_commit.message, 'chore(release)') }}
    env:
      GITHUB_ACTOR: "hyperledger-bot"
      GITHUB_ACTOR_EMAIL: "hyperledger-bot@hyperledger.org"
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
      # New JDK version makes 'localhost' lookup on linux return ipv6.
      # Our test containers are on ipv4. We need to make 'localhost' resolve to ipv4.
      JAVA_TOOL_OPTIONS: -Djava.net.preferIPv4Stack=true
      SBT_OPTS: -Xmx2G
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: ${{ github.event.inputs.release-branch }}
          fetch-depth: 0
          persist-credentials: false

      - name: Setup Java and Scala
        uses: olafurpg/setup-scala@v14
        with:
          java-version: openjdk@1.17

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "lts/*"

      - uses: crazy-max/ghaction-import-gpg@v3
        id: import_gpg
        with:
          gpg-private-key: ${{ secrets.HYP_BOT_GPG_PRIVATE }}
          passphrase: ${{ secrets.HYP_BOT_GPG_PASSWORD }}
          git-user-signingkey: true
          git-commit-gpgsign: true
          git-config-global: true
          git-tag-gpgsign: true

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ env.GITHUB_ACTOR }}
          password: ${{ env.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Release
        env:
          GIT_AUTHOR_EMAIL: ${{ steps.import_gpg.outputs.email }}
          GIT_COMMITTER_EMAIL: ${{ steps.import_gpg.outputs.email }}
          GIT_AUTHOR_NAME: ${{ steps.import_gpg.outputs.name }}
          GIT_COMMITTER_NAME: ${{ steps.import_gpg.outputs.name }}
          GITHUB_TOKEN: ${{ secrets.IDENTUS_CI }}
          PRODUCTION_RELEASE: ${{ github.event_name == 'workflow_dispatch' }}
        run: |
          npm install
          npx semantic-release
