name: Scala build and unit tests

on:
  workflow_call:
    inputs:
      component-name:
        required: true
        type: string
      component-dir:
        required: true
        type: string
      measure-coverage:
        required: false
        type: boolean
        default: true

jobs:
  build-and-unit-tests:
    name: "Build and unit tests for ${{ inputs.component-name }}"
    runs-on: self-hosted
    container:
      image: ghcr.io/input-output-hk/atala-qa-automation
      volumes:
        - /nix:/nix
      credentials:
        username: ${{ secrets.ATALA_GITHUB_ACTOR }}
        password: ${{ secrets.ATALA_GITHUB_TOKEN }}
      env:
        GITHUB_TOKEN: ${{ secrets.ATALA_GITHUB_TOKEN }}
    defaults:
      run:
        working-directory: ${{ inputs.component-dir }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # test
      - name: Cache sbt
        uses: coursier/cache-action@v6
        with:
          root: ${{ inputs.component-dir }}
          path: "/root/.cache/coursier/v1"

#      - name: Cache ivy
#        uses: actions/cache@v3
#        with:
#          path: "/root/.ivy2/cache"
#          key: ivy

#
#      - name: Run Scala formatter
#        run: |
#          sbt scalafmtCheckAll

      - name: Run Unit Tests
        run: |
          du -hs /root/.cache/coursier/v1
          # find /root/.ivy2/cache
          export COURSIER_CACHE=/root/.cache/coursier/v1
          sbt -ivy /root/.ivy2 -Dsbt.coursier.home=/root/.cache/coursier/v1 +update

#      - name: Aggregate test reports
#        if: always()
#        uses: ./.github/actions/aggregate-test-reports
#        with:
#          tests-dir: ${{ inputs.component-dir }}
#
#      - name: Publish test results
#        # Publish even if the previous test step fails
#        if: always()
#        uses: EnricoMi/publish-unit-test-result-action@v2
#        with:
#          junit_files: "${{ inputs.component-dir }}/target/test-reports/**/TEST-*.xml"
#          comment_title: "${{ inputs.component-name }} Test Results"
#          check_name: "${{ inputs.component-name }} Test Results"
#
#      - name: Code coverage report
#        if: github.event_name == 'pull_request' && inputs.measure-coverage
#        uses: 5monkeys/cobertura-action@master
#        with:
#          path: "${{ inputs.component-dir }}/target/coverage/coverage-report/cobertura.xml"
#          report_name: "${{ inputs.component-name }} Code Coverage"
#          minimum_coverage: 12
#          fail_below_threshold: true
#          only_changed_files: true
#
#      - name: Artifact coverage HTML
#        uses: actions/upload-artifact@v3
#        with:
#          name: "code-coverage-report-${{ inputs.component-name }}"
#          path: "${{ inputs.component-dir }}/target/coverage/scoverage-report"
